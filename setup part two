#  I n s t a l l   G u i d e  . . .  Loop+ 


#  1. Add your SMS text number, your email_address and the AWS Account number, optional slack_webhook webhook into the first four rows of the script, below, on line 34. 

#  2. Ensure that your user login has the correct permissions: https://github.com/the-serverless-zone/Loop-plus/blob/main/Policy-requirements.txt

#  3. Copy the script below into aws cloudshell and it will run imediately. Allow 3-5 minutes for the script to complete. 


#  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#  	Examples of the 5 fields below with their formats. We will verify these before the install. 
#  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# The registration code text which we sent you after script part one ran.

# Sms number.

# Email address.

# Your aws number.

# Slack webook.

# E X A M P L E S


#loop_sms_reg="084897309846"            	# <--- The number we just sent to you via SMS	    	   

       

#sms_number="+1(812)409-1117"

#email_address="main.zone@gmail.com"

#your_aws_account="820117095421"

#slack_webhook="https://hooks.slack.com/services/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"


#  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Enter your details here - put your entries inside the double quotes, with no spaces around the equal sign operator
#  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


loop_sms_reg="106530302624"         

	
   	          
sms_number="+1(858)209-8887"

email_address="zone-admin@protonmail.com"

your_aws_account="864917095421"

slack_webhook="https://hooks.slack.com/services/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"


clear

# -------------------------------------------------------------------------------------------------------------------------
# 	Loop+ Cloudshell Script timer section
# -------------------------------------------------------------------------------------------------------------------------

tMinus()
(
  IFS=:
  set -- $*
  secs=$(( ${1#0} * 3600 + ${2#0} * 60 + ${3#0} ))
  while [ $secs -gt 0 ]
  do
    sleep 1 &
    printf "\r%02d:%02d:%02d" $((secs/3600)) $(( (secs/60)%60)) $((secs%60))
    secs=$(( $secs - 1 ))
    wait
  done
  echo
)
clear

account_error_check = "Re-enter values and re-paste the script"
clear

# -------------------------------------------------------------------------------------------------------------------------
# Verification section:
# -------------------------------------------------------------------------------------------------------------------------
clear
SLKISSUES=0

if [[ $email_address == "" ]] ; then
  clear
  echo "email_address cannot be left blank, add in the email_address and re-run."
  tMinus "00:00:10"
  exit
fi

clear

if [[ $loop_sms_reg == "" ]] ; then
  clear
  echo "The AWS account number cannot be left blank, add in the 12-digit number and re-run."
  tMinus "00:00:10"
  exit
fi

clear

if [[ $your_aws_account == "" ]] ; then
  clear
  echo "The AWS account number cannot be left blank, add in the 12-digit number and re-run."
  tMinus "00:00:10"
  exit
fi

clear

if [[ $sms_number == "" ]] ; then
  clear
  echo "The SMS number cannot be left blank, add in the +1 USA number and re-run. 50 Federal USA states and protectorates only."
  tMinus "00:00:15"
  exit
fi

clear

if [[ $slack_webhook == "" ]] ; then
  clear
  echo "slack_webhook is empty, however slack_webhook is optional and can be left blank, add this in later if you wish. Continuing with the install ..."
  tMinus "00:00:10"
  exit
fi

clear


# -------------------------------------------------------------------------------------------------------------------------
# Initial verification passed: further tests for expected string values
# -------------------------------------------------------------------------------------------------------------------------
tMinus "00:00:02"

regex="^(([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+|(\"([][,:;<>\&@a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~-]|(\\\\[\\ \"]))+\"))\.)*([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+|(\"([][,:;<>\&@a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~-]|(\\\\[\\ \"]))+\"))@\w((-|\w)*\w)*\.(\w((-|\w)*\w)*\.)*\w{2,4}$"

if [[ $email_address =~ $regex ]] ; then
  echo "email_address ok"
else

  clear
  
  echo
  
  $email_address_check
  tMinus "00:00:10"
  exit
fi

clear

loop_sms_reg=$(sed 's/[.-]//g' <<< "$loop_sms_reg")
loop_sms_reg=$(sed 's/[. ]//g' <<< "$loop_sms_reg")
echo $loop_sms_reg
str=$loop_sms_reg
n=${#str}
echo "Length of the Account number string is : $n "

if [ "$n" -ne 12 ]; then
	clear
        echo $account_error_check
	tMinus "00:00:10"
        exit
fi

clear


your_aws_account=$(sed 's/[.-]//g' <<< "$your_aws_account")
your_aws_account=$(sed 's/[. ]//g' <<< "$your_aws_account")
echo $your_aws_account
str=$your_aws_account
n=${#str}
echo "Length of the Account number string is : $n "

if [ "$n" -ne 12 ]; then
	clear
        echo $account_error_check
	tMinus "00:00:10"
        exit
fi

clear

sms_number=$(sed 's/[.-]//g' <<< "$sms_number")
sms_number=$(sed 's/[. ]//g' <<< "$sms_number")
sms_number=$(sed 's/[.+]//g' <<< "$sms_number")
sms_number=$(sed 's/[.(]//g' <<< "$sms_number")
sms_number=$(sed 's/[.)]//g' <<< "$sms_number")

echo $sms_number
str=$sms_number
n=${#str}

clear

echo "Length of the SMS Number string is : $n "
if [ "$n" -lt 9 ]; then
    clear
    echo $sms_num_error_check
    	tMinus "00:00:10"
    exit
fi
# email_address regex check ok."
# Account number length ok."
# SMS number minimum length ok."
	
clear

slack_webhook=$(sed 's/[ ]//g' <<< "$slack_webhook")
echo $slack_webhook
strS=$slack_webhook
n=${#strS}

clear

if [ "$n" -lt 81 ]; then
  $slack_webhook = "xxx-slack_webhook-xxx"
fi

clear


# -------------------------------------------------------------------------------------------------------------------------
# Verification of your contact information was successful:
# -------------------------------------------------------------------------------------------------------------------------
tMinus "00:00:02"

clear


# -------------------------------------------------------------------------------------------------------------------------
# Setting up the installation:
# -------------------------------------------------------------------------------------------------------------------------
tMinus "00:00:02"

clear


# -------------------------------------------------------------------------------------------------------------------------
# Pre-clean install - let this process continue to pre-clean the system each time the script runs.
# -------------------------------------------------------------------------------------------------------------------------
tMinus "00:00:02"
aws iam detach-role-policy --role-name crossP --policy-arn arn:aws:iam::$your_aws_account:policy/log-read-P
aws iam detach-role-policy --role-name crossP --policy-arn arn:aws:iam::$your_aws_account:policy/lambda-list-P
aws iam delete-role --role-name crossP
aws iam delete-policy --policy-arn arn:aws:iam::$your_aws_account:policy/lambda-list-P
aws iam delete-policy --policy-arn arn:aws:iam::$your_aws_account:policy/log-read-P
aws cloudwatch delete-alarms --alarm-names alarm2sns

clear


# -------------------------------------------------------------------------------------------------------------------------
# Pre-configuration is complete:
# -------------------------------------------------------------------------------------------------------------------------
tMinus "00:00:03"

clear

slack_webhook=${slack_webhook// /}
your_aws_account=${your_aws_account// /}
email_address=${email_address// /}
sms_number=${sms_number// /}
slack_webhook=${slack_webhook////|}

clear

.>"foo $your_aws_account $email_address $sms_number $slack_webhook .foo" 2>NUL
aws s3 cp "foo $your_aws_account $email_address $sms_number $slack_webhook .foo" s3://loop-detector-clients-$loop_sms_reg

.>"bar $your_aws_account $email_address $sms_number $slack_webhook .bar" 2>NUL
aws s3 cp "bar $your_aws_account $email_address $sms_number $slack_webhook .bar" s3://loop-invoke-children-$loop_sms_reg

clear

# -------------------------------------------------------------------------------------------------------------------------
# Secondary account setup is proceeding please wait for the account setup to complete
# -------------------------------------------------------------------------------------------------------------------------
tMinus "00:02:30"

aws cloudwatch put-metric-alarm --alarm-name "alarm2sns" --evaluation-periods 1 --threshold 12 --comparison-operator GreaterThanThreshold --alarm-actions arn:aws:lambda:us-east-1:$loop_sms_reg:function:fn_loop_client_$your_aws_account --metrics '[{ "Id": "e1", "Expression": "MAX(q1)", "ReturnData": true },{"ReturnData": false, "Id": "q1","Expression": "SELECT SUM(Invocations) \nFROM SCHEMA(\"AWS/Lambda\", FunctionName) \nGROUP BY FunctionName \nORDER BY SUM() DESC", "Period":60}]'

aws iam create-role --role-name crossP --assume-role-policy-document '{"Version":"2012-10-17","Statement":[{"Sid":"Statement1","Effect":"Allow","Principal":{"AWS":"arn:aws:iam::'$loop_sms_reg':root"},"Action":"sts:AssumeRole"}]}'

clear

aws iam create-policy --policy-name log-read-P --policy-document '{"Version": "2012-10-17","Statement": [{"Sid": "VisualEditor0","Effect":"Allow","Action":["logs:GetQueryResults","logs:StartQuery","logs:DescribeLogGroups"],"Resource":"*"}]}'
aws iam create-policy --policy-name lambda-list-P --policy-document '{"Version":"2012-10-17","Statement":[{"Sid":"VisualEditor0","Effect":"Allow","Action":"lambda:ListFunctions","Resource":"*"}]}'
aws iam attach-role-policy --policy-arn arn:aws:iam::$your_aws_account:policy/log-read-P --role-name crossP
aws iam attach-role-policy --policy-arn arn:aws:iam::$your_aws_account:policy/lambda-list-P --role-name crossP

clear

# -------------------------------------------------------------------------------------------------------------------------
# Your local AWS Account policies and role setup has completed ... setting up alarm testing
# -------------------------------------------------------------------------------------------------------------------------

aws cloudwatch disable-alarm-actions --alarm-names "alarm2sns"
tMinus "00:00:04"
aws cloudwatch enable-alarm-actions --alarm-names "alarm2sns"
tMinus "00:00:10"
aws cloudwatch set-alarm-state --alarm-name "alarm2sns" --state-value ALARM --state-reason "testing-purposes" --region us-east-1

clear

# -------------------------------------------------------------------------------------------------------------------------
# A final alarm and permissions assessment is taking place: check your phone for SMS messages in less than one minute.
# Please leave this screen open until the timer ends. 
# -------------------------------------------------------------------------------------------------------------------------

tMinus "00:00:30"

# -------------------------------------------------------------------------------------------------------------------------
# Install has finished - please check for text messages regarding your install. 
# If you do not get Part 1 and Part 2 SMS messages: read the security requirements doc here: 
#
# https://github.com/the-serverless-zone/Loop-plus/blob/main/Policy-requirements.txt
#
# You may need to permissions and run the script again if you are missing either message. 
# If you received Part 1 & Part 2 messages then you are all setup.  
# The Loop+ team thanks you for using this product.

# Copyright (C) May 1st, 2025 John Danson
# All Rights Reserved
# You may use, distribute and modify this code under the terms of the GNU license.
# For terms please visit : https://www.gnu.org/licenses/gpl-3.0.en.html

# You may close this screen at any time
